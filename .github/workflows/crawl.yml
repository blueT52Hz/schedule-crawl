name: Puppeteer Prisma Scraper

on:
  push:
    branches:
      - main # Kích hoạt khi có push vào nhánh main
  schedule:
    - cron: "0,30 * * * *" # Chạy vào phút 0 và 30 mỗi giờ (0h00, 0h30, 1h00, 1h30,...)
  workflow_dispatch: # Cho phép chạy thủ công từ GitHub UI
  workflow_call: # Cho phép workflow khác gọi
    secrets:
      DATABASE_URL:
        required: true

jobs:
  run-crawler:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: false # Nếu fail sẽ fail toàn bộ workflow
    outputs:
      crawler_success: ${{ steps.set-result.outputs.success }}
    defaults:
      run:
        working-directory: ./ # Thư mục gốc

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: "./package-lock.json"

      - name: Install Dependencies
        run: |
          npm ci
          npm install -g ts-node

      - name: Install Chromium Dependencies (for Puppeteer)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            chromium-browser \
            libnss3 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libcups2 \
            libxcomposite1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxss1 \
            libxtst6 \
            ca-certificates \
            fonts-liberation \
            libdbus-1-3 \
            libgbm1 \
            libglib2.0-0 \
            libnspr4 \
            libpango-1.0-0 \
            fonts-noto-color-emoji \
            libx11-xcb1 \
            libxcb-dri3-0 \
            libxcb1

      - name: Run Puppeteer Prisma Scraper
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          npx ts-node src/index.ts

      - name: Set result output
        id: set-result
        if: success()
        run: echo "success=true" >> $GITHUB_OUTPUT
